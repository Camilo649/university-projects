module maindec (
	
	input logic [10:0] Op,
	output logic Reg2Loc,
	output logic ALUSrc,
	output logic MemtoReg,
	output logic RegWrite,
	output logic MemRead,
	output logic MemWrite,
	output logic Branch,
	output logic [1:0] ALUOp
	);
				
	always_comb begin
		Reg2Loc = 0;
		ALUSrc = 0;
		MemtoReg = 0;
		RegWrite = 0;
		MemRead = 0;
		MemWrite = 0;
		Branch = 0;
		ALUOp = 0;
		case (Op)
			11'bxxx_01xx_xxxx: begin // R-format
				RegWrite = 1;
				ALUOp = 2'b10;
			end
			11'b111_1100_0010: begin // LDUR
				ALUSrc = 1;
				MemtoReg = 1;
				RegWrite = 1;
				MemRead = 1;  
			end
			11'b111_1100_0000: begin // STUR
				Reg2Loc = 1;
				ALUSrc = 1;
				MemWrite = 1;
			end
			11'bxxx_10xx_xxxx: begin // CBZ
				Reg2Loc = 1;
				Branch = 1;
				ALUOp = 2'b01;
			end
		endcase
		
endmodule